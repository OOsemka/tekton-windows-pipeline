apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: windows-installer
  namespace: chrisj
spec:
  params:
    - default: '<get the windows iso in here>'
      name: winImageDownloadURL
      type: string
    - default: windows-10-autounattend
      name: autounattendConfigMapName
      type: string
  tasks:
    - name: create-source-dv
      params:
        - name: manifest
          value: |-
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
             generateName: windows-10-source-
            spec:
              pvc:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 7Gi
                volumeMode: Filesystem
              source:
                http:
                  url: $(params.winImageDownloadURL)
        - name: namespace
          value: chrisj
        - name: waitForSuccess
          value: 'true'
        - name: allowReplace
          value: 'false'
        - name: deleteObject
          value: 'false'
        - name: deleteObjectKind
          value: ''
        - name: deleteObjectName
          value: ''
      taskRef:
        kind: Task
        name: modify-data-object
    - name: create-base-dv
      params:
        - name: manifest
          value: |-
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows-10-base-
            spec:
              pvc:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 20Gi
                volumeMode: Filesystem
              source:
                blank: {}
        - name: namespace
          value: chrisj
        - name: waitForSuccess
          value: 'true'
        - name: allowReplace
          value: 'false'
        - name: deleteObject
          value: 'false'
        - name: deleteObjectKind
          value: ''
        - name: deleteObjectName
          value: ''
      taskRef:
        kind: Task
        name: modify-data-object
    - name: create-vm-from-manifest
      params:
        - name: manifest
          value: |-
            apiVersion: kubevirt.io/v1alpha3
            kind: VirtualMachine
            metadata:
              generateName: windows-installer-
              annotation:
                description: Windows VM generated by windows-installer pipeline
              labels:
                app: windows-installer
            spec:
              runStrategy: RerunOnFailure
              template:
                metadata:
                  labels:
                    kubevirt.io/domain: windows-installer
                spec:
                  domain:
                    cpu:
                     sockets: 2
                     cores: 1
                     threads: 1
                    resources:
                      requests:
                        memory: 2Gi
                    devices:
                      disks:
                        - name: installcdrom
                          cdrom:
                            bus: sata
                          bootOrder: 1
                        - name: rootdisk
                          bootOrder: 2
                          disk:
                            bus: virtio
                        - name: virtiocontainerdisk
                          cdrom:
                            bus: sata
                        - name: sysprepconfig
                          cdrom:
                            bus: sata
                      interfaces:
                        - bridge: {}
                          name: default
                      inputs:
                        - type: tablet
                          bus: usb
                          name: tablet
                  networks:
                    - name: default
                      pod: {}
                  volumes:
                    - name: installcdrom
                      dataVolume:
                        name: '$(tasks.create-source-dv.results.name)'
                    - name: rootdisk
                      dataVolume:
                        name: '$(tasks.create-base-dv.results.name)'
                    - name: virtiocontainerdisk
                      containerDisk:
                        image: kubevirt/virtio-container-disk
                    - name: sysprepconfig
                      sysprep:
                        configMap:
                          name: $(params.autounattendConfigMapName)
        - name: virtctl
          value: ''
        - name: namespace
          value: ''
        - name: startVM
          value: ''
        - name: runStrategy
          value: ''
      runAfter:
        - create-source-dv
        - create-base-dv
      taskRef:
        kind: Task
        name: create-vm-from-manifest
    - name: wait-for-vmi-status
      params:
        - name: vmiName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: vmiNamespace
          value: ''
        - name: successCondition
          value: status.phase == Succeeded
        - name: failureCondition
          value: 'status.phase in (Failed, Unknown)'
      runAfter:
        - create-vm-from-manifest
      taskRef:
        kind: Task
        name: wait-for-vmi-status
    - name: cleanup-vm
      params:
        - name: vmName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: vmNamespace
          value: ''
        - name: stop
          value: 'true'
        - name: delete
          value: 'true'
        - name: timeout
          value: 30m
        - name: secretName
          value: __empty__
        - name: command
          value: []
        - name: args
          value: []
        - name: script
          value: ''
      runAfter:
        - wait-for-vmi-status
      taskRef:
        kind: Task
        name: cleanup-vm

